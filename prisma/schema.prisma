// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PropertyType {
  slug        String   @id @default(cuid()) @db.VarChar(20)
  name        String   @db.VarChar(50)
  description String   @db.VarChar(250)
  created_at  DateTime @default(now()) @db.Timestamp
  updated_at  DateTime @default(now()) @updatedAt @db.Timestamp

  properties Property[]

  @@map("property_types")
}

model State {
  id         Int      @id @default(autoincrement()) @db.Integer
  name       String   @db.VarChar(75)
  uf         String   @db.Char(2)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp

  cities City[]

  @@map("states")
}

model City {
  id         Int      @id @default(autoincrement()) @db.Integer
  name       String   @db.VarChar(120)
  state_id   Int      @db.Integer
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp

  state     State?    @relation(fields: [state_id], references: [id])
  addresses Address[]

  @@map("cities")
}

model Address {
  id              String   @id @default(uuid()) @db.Uuid
  city_id         Int      @db.Integer
  district        String   @db.VarChar(150)
  street          String   @db.VarChar(150)
  number          Int?     @db.Integer
  complement      String?  @db.VarChar(150)
  reference_point String?  @db.VarChar(150)
  created_at      DateTime @default(now()) @db.Timestamp
  updated_at      DateTime @default(now()) @updatedAt @db.Timestamp

  city       City?      @relation(fields: [city_id], references: [id])
  properties Property[]

  @@map("addresses")
}

model Property {
  id                 String   @id @default(uuid()) @db.Uuid
  name               String   @db.VarChar(150)
  description        String?  @db.VarChar(500)
  price              Float    @db.DoublePrecision
  views              Int      @default(0) @db.Integer
  size               Int      @db.Integer
  negociation_type   String   @db.VarChar(10)
  bedrooms           Int?     @db.Integer
  suits              Int?     @db.Integer
  bathrooms          Int?     @db.Integer
  garages            Int?     @db.Integer
  property_type_slug String   @db.VarChar(20)
  address_id         String   @db.Uuid
  enabled            Boolean  @default(true) @db.Boolean
  active             Boolean  @default(true) @db.Boolean
  created_at         DateTime @default(now()) @db.Timestamp
  updated_at         DateTime @default(now()) @updatedAt @db.Timestamp

  property_type PropertyType? @relation(fields: [property_type_slug], references: [slug])
  address       Address?      @relation(fields: [address_id], references: [id])

  property_images PropertyImage[]

  @@map("properties")
}

model PropertyImage {
  id          String  @id @default(uuid()) @db.Uuid()
  property_id String  @db.Uuid()
  link        String  @db.VarChar(450)
  order       Int?    @db.Integer
  active      Boolean @default(true)

  property Property @relation(fields: [property_id], references: [id])

  @@map("property_images")
}
